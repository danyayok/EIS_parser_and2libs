name: –¢–µ—Å—Ç –∑–∞–∫—É–ø–æ–∫

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'README.md'
      - 'docs/**'
      - '**.md'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - 'README.md'
      - 'docs/**'
      - '**.md'

jobs:
  test:
    name: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ—Å—Ç–æ–≤ –Ω–∞ ${{ matrix.os }} Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ['3.9', '3.10', '3.11']
        include:
          - os: ubuntu-latest
            python-version: '3.12'
            experimental: true

    steps:
    - name: –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–¥–∞
      uses: actions/checkout@v4

    - name: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è —Ç–µ—Å—Ç–æ–≤
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/pip
          ~/.cache/pypoetry
          venv/
        key: ${{ runner.os }}-python-${{ matrix.python-version }}-${{ hashFiles('requirements.txt', 'pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-python-${{ matrix.python-version }}-

    - name: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov requests beautifulsoup4 lxml
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: –Æ–Ω–∏—Ç —Ç–µ—Å—Ç—ã
      run: |
        pytest tests/ -v --tb=short --cov=src --cov-report=xml --cov-report=term-missing

    - name: Code coverage (–ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–æ–ª-–≤–æ –ø–æ–∫—Ä—ã—Ç—ã—Ö —Å—Ç—Ä–æ–∫ –∫–æ–¥–∞ —Ç–µ—Å—Ç–∞–º–∏)
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-${{ matrix.os }}-${{ matrix.python-version }}
      if: matrix.os == 'ubuntu-latest'

    - name: –ó–∞–≥—Ä—É–∑–∫–∞ –∏—Ç–æ–≥–∞ —Ç–µ—Å—Ç–æ–≤
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.os }}-py${{ matrix.python-version }}
        path: |
          coverage.xml
        retention-days: 7

  lint:
    name: Lint —Ç–µ—Å—Ç—ã (—Å–∏–Ω—Ç–∞–∫—Å–∏—Å, dead code –¥–æ –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–µ–ª—å–∑—è –¥–æ–π—Ç–∏)
    runs-on: ubuntu-latest
    needs: test  # –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏

    steps:
    - name: –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–¥–∞
      uses: actions/checkout@v4

    - name: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ª–∏–Ω—Ç–µ—Ä–æ–≤
      run: |
        pip install flake8 black mypy

    - name: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∏–ª—è –∫–æ–¥–∞ —Å —Ñ–ª–µ–∫–æ–º (–Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, –æ–≥—Ä–æ–º–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ —Ç.–¥.)
      run: |
        flake8 src/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics --max-line-length=120

    - name: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∏–ª—è –∫–æ–¥–∞ —Å black (–µ—â—ë 1 —Å—Ç–∏–ª–∏—Å—Ç–∏—á–µ—Å–∫–æ–µ, –Ω–æ –º–æ–∂–Ω–æ –∏ –±–µ–∑ –Ω–µ–≥–æ)
      run: |
        black --check src/ tests/ --diff --color

    - name: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å mypy (–ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ç–∏–ø–æ–≤)
      run: |
        mypy src/ --ignore-missing-imports

  security:
    name: –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–¥–∞
      uses: actions/checkout@v4

    - name: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ (–Ω–∞ –Ω–∞–ª–∏—á–∏–µ —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π –≤ –ª–∏–±–∞—Ö –∏ –ø—Ä–æ—á–µ–º)
      run: |
        pip install safety
        safety check --full-report

    - name: –ü–æ–∏—Å–∫ —Å–µ–∫—Ä–µ—Ç–æ–≤ (—Ç–∏–ø–∞ —Ç–æ–∫–µ–Ω–æ–≤)
      uses: gitleaks/gitleaks-action@v2
      with:
        config-path: .gitleaks.toml

  integration:
    name: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–¥–∞
      uses: actions/checkout@v4

    - name: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
      run: |
        pip install pytest requests beautifulsoup4 lxml

    - name: –ó–∞–ø—É—Å–∫ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤
      run: |
        pytest tests/ -v -m "integration" --tb=short

  build-docs:
    name: –°–±–æ—Ä–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
    runs-on: ubuntu-latest
    needs: [test, lint, security]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - name: –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–¥–∞
      uses: actions/checkout@v4

    - name: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ —Ç–µ—Å—Ç–æ–≤
      run: |
        echo "# üß™ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–æ–≤ - $(date)" > TEST_RESULTS.md
        echo "## ‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!" >> TEST_RESULTS.md
        echo "### üìä –û–∫—Ä—É–∂–µ–Ω–∏–µ" >> TEST_RESULTS.md
        echo "- Python –≤–µ—Ä—Å–∏–∏: 3.9, 3.10, 3.11" >> TEST_RESULTS.md
        echo "- –û–°: Ubuntu, Windows" >> TEST_RESULTS.md
        echo "- –í–µ—Ç–∫–∞: ${{ github.ref }}" >> TEST_RESULTS.md
        echo "### üöÄ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏" >> TEST_RESULTS.md
        echo "1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–¥–∞: ‚úÖ" >> TEST_RESULTS.md
        echo "2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏: ‚úÖ" >> TEST_RESULTS.md
        echo "3. –ì–æ—Ç–æ–≤–æ –∫ –¥–µ–ø–ª–æ—é!" >> TEST_RESULTS.md

    - name: –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Ç–µ—Å—Ç–æ–≤
      uses: actions/upload-artifact@v4
      with:
        name: test-documentation
        path: TEST_RESULTS.md
        retention-days: 30

  notify:
    name: –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å—Ç–∞—Ç—É—Å–µ
    runs-on: ubuntu-latest
    needs: [test, lint, security]
    if: always()

    steps:
    - name: –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø—Ä–∏ —É—Å–ø–µ—Ö–µ
      if: success()
      run: |
        echo "‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã! –ì–æ—Ç–æ–≤—ã –∫ —Å–ª–∏—è–Ω–∏—é/–¥–µ–ø–ª–æ—é."

    - name: –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ
      if: failure()
      run: |
        echo "‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–µ –ø—Ä–æ—à–ª–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ workflow."